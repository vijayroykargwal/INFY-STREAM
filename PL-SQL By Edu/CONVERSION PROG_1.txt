DROP TABLE XX_SUPPLIER_TEMP_04;
CREATE TABLE XX_SUPPLIER_TEMP_04(
VENDOR_NAME VARCHAR2(240),
VENDOR_SITE_CODE VARCHAR2(15),
ORG_ID NUMBER,
SHIP_TO_LOCATION_ID NUMBER,
BILL_TO_LOCATION_ID NUMBER,
INVOICE_CURRENCY_CODE VARCHAR2(30),
PAYMENT_CURRENCY_CODE VARCHAR2(30),
START_DATE_ACTIVE DATE,
ADDRESS_LINE1 VARCHAR2(240),
CITY VARCHAR2(60),
COUNTRY VARCHAR2(60),
RECORD_STATUS VARCHAR2(30),
VERIFY_FLAG CHAR,
ERROR_MESSAGE VARCHAR2(240)
);

select * from XX_SUPPLIER_TEMP_04;
TRUNCATE TABLE XX_SUPPLIER_TEMP_04;
select * from po_vendors;
---------------------------------PROCEDURE START------------------
CREATE OR REPLACE PROCEDURE SP_SUPPLIERS_DUMMY_INT_04(ERRBUF OUT VARCHAR2, RETCODE OUT VARCHAR2) 
IS
TYPE type_rec_suppliers_info IS RECORD(ROWID VARCHAR2(200),
VENDOR_NAME VARCHAR2(240),VENDOR_SITE_CODE VARCHAR2(15),ORG_ID NUMBER,SHIP_TO_LOCATION_ID NUMBER,
BILL_TO_LOCATION_ID NUMBER, INVOICE_CURRENCY_CODE VARCHAR2(30),PAYMENT_CURRENCY_CODE VARCHAR2(30),
START_DATE_ACTIVE DATE,ADDRESS_LINE1 VARCHAR2(240),CITY VARCHAR2(60),COUNTRY VARCHAR2(60),RECORD_STATUS
VARCHAR2(30),VERIFY_FLAG CHAR,ERROR_MESSAGE VARCHAR2(240));
TYPE type_suppliers_info IS TABLE OF type_rec_suppliers_info;
col_suppliers_info type_suppliers_info := type_suppliers_info();
V_COUNT_VENDOR NUMBER;
V_COUNT_SHIP_LOC_ID NUMBER;
V_COUNT_BILL_LOC_ID NUMBER;
V_COUNT_INVOICE_CODE NUMBER;
V_COUNT_PAYMENT_CODE NUMBER;
BEGIN
SELECT ROWID,VENDOR_NAME ,
VENDOR_SITE_CODE ,
ORG_ID ,
SHIP_TO_LOCATION_ID ,
BILL_TO_LOCATION_ID ,
INVOICE_CURRENCY_CODE ,
PAYMENT_CURRENCY_CODE ,
START_DATE_ACTIVE ,
ADDRESS_LINE1 ,
CITY ,
COUNTRY ,
RECORD_STATUS ,
VERIFY_FLAG ,
ERROR_MESSAGE BULK COLLECT INTO col_suppliers_info  FROM XX_SUPPLIER_TEMP_04;

FOR v_index IN col_suppliers_info.FIRST..col_suppliers_info.LAST
LOOP
-----------VENDOR NAME VALIDATION------------------
BEGIN
IF col_suppliers_info(v_index).VENDOR_NAME IS NULL THEN
UPDATE XX_SUPPLIER_TEMP_04 SET VERIFY_FLAG ='N',ERROR_MESSAGE='Vendor name does not exist' 
WHERE ROWID = col_suppliers_info(v_index).ROWID;
COMMIT;
CONTINUE;
END IF;
END;

BEGIN
SELECT COUNT(VENDOR_NAME) INTO V_COUNT_VENDOR FROM PO_VENDORS 
WHERE UPPER(VENDOR_NAME)=UPPER(col_suppliers_info(v_index).VENDOR_NAME);
IF V_COUNT_VENDOR>0 THEN
UPDATE XX_SUPPLIER_TEMP_04 SET VERIFY_FLAG ='N',ERROR_MESSAGE='Vendor name already exists' 
WHERE ROWID = col_suppliers_info(v_index).ROWID;
COMMIT;
CONTINUE;
END IF;
END;
------------VALIDATION OF SHIP_TO_LOCATION_ID-----------------------
BEGIN
SELECT COUNT(SHIP_TO_LOCATION_ID) INTO V_COUNT_SHIP_LOC_ID FROM HR_LOCATIONS WHERE
SHIP_TO_LOCATION_ID = col_suppliers_info(v_index).SHIP_TO_LOCATION_ID;
IF V_COUNT_SHIP_LOC_ID <=0 THEN
UPDATE XX_SUPPLIER_TEMP_04 SET VERIFY_FLAG ='N',ERROR_MESSAGE='INVALID SHIP TO LOCATION' 
WHERE ROWID = col_suppliers_info(v_index).ROWID;
COMMIT;
CONTINUE;
END IF;
END;
------------------VALIDATION OF BILL_TO_LOCATION_ID---------------
BEGIN
SELECT COUNT(LOCATION_ID) INTO V_COUNT_BILL_LOC_ID FROM HR_LOCATIONS WHERE
LOCATION_ID = col_suppliers_info(v_index).BILL_TO_LOCATION_ID;
IF V_COUNT_BILL_LOC_ID <=0 THEN
UPDATE XX_SUPPLIER_TEMP_04 SET VERIFY_FLAG ='N',ERROR_MESSAGE='INVALID BILL TO LOCATION' 
WHERE ROWID = col_suppliers_info(v_index).ROWID;
COMMIT;
CONTINUE;
END IF;
END;
--------------VALIDATION FOR INVOICE_CURRENCY_CODE AND PAYMENT_CURRENCY_CODE ---------------------
BEGIN
SELECT COUNT(CURRENCY_CODE) INTO V_COUNT_INVOICE_CODE
FROM FND_CURRENCIES WHERE UPPER(CURRENCY_CODE)=UPPER(col_suppliers_info(v_index).INVOICE_CURRENCY_CODE);
SELECT COUNT(CURRENCY_CODE) INTO V_COUNT_PAYMENT_CODE FROM FND_CURRENCIES
WHERE UPPER(CURRENCY_CODE)=UPPER(col_suppliers_info(v_index).PAYMENT_CURRENCY_CODE);
IF (col_suppliers_info(v_index).PAYMENT_CURRENCY_CODE IS NOT NULL OR col_suppliers_info(v_index).INVOICE_CURRENCY_CODE
IS NOT NULL) AND (V_COUNT_INVOICE_CODE <=0 OR V_COUNT_PAYMENT_CODE<=0) THEN
UPDATE XX_SUPPLIER_TEMP_04 SET VERIFY_FLAG ='N',ERROR_MESSAGE='Invalid PAYMENT/INVOICE currency code' 
WHERE ROWID = col_suppliers_info(v_index).ROWID;
COMMIT;
CONTINUE;
END IF;
END;

--------------VALIDATION OF START_DATE_ACTIVE------------------------
BEGIN
IF col_suppliers_info(v_index).START_DATE_ACTIVE > SYSDATE THEN
UPDATE XX_SUPPLIER_TEMP_04 SET VERIFY_FLAG ='N',ERROR_MESSAGE='Invalid Start Date' 
WHERE ROWID = col_suppliers_info(v_index).ROWID;
COMMIT;
CONTINUE;
END IF;
END;
----------INSERTING INTO INTERFACE TABLE-----------------------
----create sequence SEQ_VENDOR_INT_ID_G04 START WITH 767103;-----
DECLARE
V_CREATED_BY VARCHAR2(100) := FND_PROFILE.VALUE('USER_ID');
V_LAST_UPDATE_LOGIN VARCHAR2(100) := FND_PROFILE.VALUE('LOGIN_ID');
V_LAST_UPDATED_BY VARCHAR2(100):= FND_PROFILE.VALUE('USER_ID');
BEGIN
IF col_suppliers_info(v_index).ERROR_MESSAGE IS NULL THEN
INSERT INTO AP_SUPPLIERS_INT_DUMMY_G04 VALUES(SEQ_VENDOR_INT_ID_G04.NEXTVAL,col_suppliers_info(v_index).VENDOR_NAME,
col_suppliers_info(v_index).VENDOR_SITE_CODE,col_suppliers_info(v_index).ORG_ID,V_CREATED_BY,
SYSDATE,SYSDATE,V_LAST_UPDATE_LOGIN,V_LAST_UPDATED_BY,
col_suppliers_info(v_index).SHIP_TO_LOCATION_ID,
col_suppliers_info(v_index).BILL_TO_LOCATION_ID,
col_suppliers_info(v_index).INVOICE_CURRENCY_CODE,
col_suppliers_info(v_index).PAYMENT_CURRENCY_CODE,
col_suppliers_info(v_index).START_DATE_ACTIVE,
col_suppliers_info(v_index).ADDRESS_LINE1,
col_suppliers_info(v_index).CITY,
col_suppliers_info(v_index).COUNTRY,
col_suppliers_info(v_index).RECORD_STATUS,NULL,NULL);
COMMIT;
END IF;
END;
END LOOP;
END;
------------------------PROCEDURE END---------------------------------

select * from fnd_currencies
select * from XX_SUPPLIER_TEMP_04
select * from AP_SUPPLIERS_INT_DUMMY_G04
drop table AP_SUPPLIERS_INT_DUMMY_G04;
select * from AP_SUPPLIERS_BASE_DUMMY_G04
truncate table AP_SUPPLIERS_INT_DUMMY_G04
TRUNCATE TABLE AP_SUPPLIERS_BASE_DUMMY_G04
create table AP_SUPPLIERS_INT_DUMMY_G04 as(Select * from AP_SUPPLIERS_INT);
create table AP_SUPPLIERS_BASE_DUMMY_G04 as (select * from AP_SUPPLIERS_INT_DUMMY_G04)
alter table AP_SUPPLIERS_BASE_DUMMY_G04 add(VERIFY_FLAG CHAR,ERROR_MESSAGE VARCHAR2(240));

CREATE TABLE AP_SUPPLIERS_INT_DUMMY_G04(
VENDOR_INTERFACE_ID NUMBER,
VENDOR_NAME VARCHAR2(240),
VENDOR_SITE_CODE VARCHAR2(15),
ORG_ID NUMBER,
CREATED_BY VARCHAR2(100),
CREATION_DATE DATE,
LAST_UPDATE_DATE DATE,
LAST_UPDATE_LOGIN VARCHAR2(100),
LAST_UPDATED_BY VARCHAR2(100),
SHIP_TO_LOCATION_ID NUMBER,
BILL_TO_LOCATION_ID NUMBER,
INVOICE_CURRENCY_CODE VARCHAR2(30),
PAYMENT_CURRENCY_CODE VARCHAR2(30),
START_DATE_ACTIVE DATE,
ADDRESS_LINE1 VARCHAR2(240),
CITY VARCHAR2(60),
COUNTRY VARCHAR2(60),
RECORD_STATUS VARCHAR2(30),
VERIFY_FLAG CHAR,
ERROR_MESSAGE VARCHAR2(240)
);
CREATE TABLE AP_SUPPLIERS_INT_DUMMY_G04 as (SELECT * FROM XX_SUPPLIER_TEMP_04)
ALTER TABLE AP_SUPPLIERS_INT_DUMMY_G04 ADD(CREATED_BY VARCHAR2(100),CREATION_DATE DATE,LAST_UPDATE_DATE DATE,
LAST_UPDATE_LOGIN VARCHAR2(100),LAST_UPDATED_BY VARCHAR2(100))

DROP TABLE AP_SUPPLIERS_BASE_DUMMY_G04
CREATE TABLE AP_SUPPLIERS_BASE_DUMMY_G04 AS(SELECT * FROM AP_SUPPLIERS_INT_DUMMY_G04)
SELECT * FROM AP_SUPPLIERS_BASE_DUMMY_G04

CREATE TABLE AP_SUPPLIER_SITES_INT_DMY_G04(
VENDOR_SITE_INTERFACE_ID NUMBER,
VENDOR_NAME VARCHAR2(240),
VENDOR_SITE_CODE VARCHAR2(15),
ORG_ID NUMBER,
CREATED_BY VARCHAR2(100),
CREATION_DATE DATE,
LAST_UPDATE_DATE DATE,
LAST_UPDATE_LOGIN VARCHAR2(100),
LAST_UPDATED_BY VARCHAR2(100),
SHIP_TO_LOCATION_ID NUMBER,
BILL_TO_LOCATION_ID NUMBER,
INVOICE_CURRENCY_CODE VARCHAR2(30),
PAYMENT_CURRENCY_CODE VARCHAR2(30),
START_DATE_ACTIVE DATE,
ADDRESS_LINE1 VARCHAR2(240),
CITY VARCHAR2(60),
COUNTRY VARCHAR2(60),
RECORD_STATUS VARCHAR2(30),
VERIFY_FLAG CHAR,
ERROR_MESSAGE VARCHAR2(240)
);