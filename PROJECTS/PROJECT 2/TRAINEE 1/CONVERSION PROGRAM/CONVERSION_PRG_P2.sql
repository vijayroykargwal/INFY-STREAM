CREATE OR REPLACE PROCEDURE SP_SUPPLIERS_INT_P2_G04(ERRBUF OUT VARCHAR2, RETCODE OUT VARCHAR2) 
IS
TYPE TYPE_SUPPLIERS_INFO IS TABLE OF XX_SUPPLIER_TEMP_P2_G04%ROWTYPE;
COL_SUPPLIERS_INFO TYPE_SUPPLIERS_INFO := TYPE_SUPPLIERS_INFO();
V_COUNT_SUPPLIER NUMBER;
V_COUNT_SHIP_LOC_ID NUMBER;
V_COUNT_BILL_LOC_ID NUMBER;
V_COUNT_INVOICE_CODE NUMBER;
V_COUNT_PAYMENT_CODE NUMBER;
V_COUNT_CATEGORY NUMBER;
V_COUNT_ITEM NUMBER;
V_COUNT_COUNTRY NUMBER;
V_COUNT_CITY NUMBER;
BEGIN
SELECT * BULK COLLECT INTO COL_SUPPLIERS_INFO  FROM XX_SUPPLIER_TEMP_P2_G04;
FOR V_INDEX IN COL_SUPPLIERS_INFO.FIRST..COL_SUPPLIERS_INFO.LAST
LOOP
----------SUPPLIER ID VALIDATION---------------------
BEGIN
IF COL_SUPPLIERS_INFO(V_INDEX).SUPPLIER_ID IS NULL THEN
UPDATE XX_SUPPLIER_TEMP_P2_G04 SET VERIFY_FLAG ='N',ERROR_MESSAGE='SUPPLIER ID CANNOT BE NULL' 
WHERE COL_SUPPLIERS_INFO(V_INDEX).SUPPLIER_ID IS NULL;
COMMIT;
CONTINUE;
END IF;
END;
-----------SUPPLIER NAME VALIDATION------------------
BEGIN
IF COL_SUPPLIERS_INFO(V_INDEX).SUPPLIER_NAME IS NULL THEN
UPDATE XX_SUPPLIER_TEMP_P2_G04 SET VERIFY_FLAG ='N',ERROR_MESSAGE='SUPPLIER NAME DOES NOT EXIST' 
WHERE SUPPLIER_ID = COL_SUPPLIERS_INFO(V_INDEX).SUPPLIER_ID;
COMMIT;
CONTINUE;
END IF;
END;

BEGIN
SELECT COUNT(SUPPLIER_NAME) INTO V_COUNT_SUPPLIER FROM XX_SUPPLIER_BASE_P2_G04
WHERE UPPER(SUPPLIER_NAME)=UPPER(COL_SUPPLIERS_INFO(V_INDEX).SUPPLIER_NAME);
IF V_COUNT_SUPPLIER>0 THEN
UPDATE XX_SUPPLIER_TEMP_P2_G04 SET VERIFY_FLAG ='N',ERROR_MESSAGE='SUPPLIER NAME ALREADY EXISTS' 
WHERE SUPPLIER_ID = COL_SUPPLIERS_INFO(V_INDEX).SUPPLIER_ID;
COMMIT;
CONTINUE;
END IF;
END;

----------VALIDATION OF CATEGORY_NAME-------------------------------
BEGIN
IF COL_SUPPLIERS_INFO(V_INDEX).CATEGORY_NAME IS NULL THEN
UPDATE XX_SUPPLIER_TEMP_P2_G04 SET VERIFY_FLAG ='N',ERROR_MESSAGE='CATEGORY NAME CANNOT BE NULL' 
WHERE SUPPLIER_ID = COL_SUPPLIERS_INFO(V_INDEX).SUPPLIER_ID;
COMMIT;
CONTINUE;
END IF;
END;

BEGIN
SELECT COUNT(CATEGORY_ID) INTO V_COUNT_CATEGORY FROM XX_ITEM_CATEGORY_04 
WHERE UPPER(CATEGORY_NAME)= UPPER(COL_SUPPLIERS_INFO(V_INDEX).CATEGORY_NAME);
IF V_COUNT_CATEGORY <=0 THEN
UPDATE XX_SUPPLIER_TEMP_P2_G04 SET VERIFY_FLAG ='N',ERROR_MESSAGE='INVALID CATEGORY' 
WHERE SUPPLIER_ID = COL_SUPPLIERS_INFO(V_INDEX).SUPPLIER_ID;
COMMIT;
CONTINUE;
END IF;
END;
----------------VALIDATION OF ITEM_NAME----------------------------
BEGIN
IF COL_SUPPLIERS_INFO(V_INDEX).ITEM_NAME IS NULL THEN
UPDATE XX_SUPPLIER_TEMP_P2_G04 SET VERIFY_FLAG ='N',ERROR_MESSAGE='ITEM NAME CANNOT BE NULL' 
WHERE SUPPLIER_ID = COL_SUPPLIERS_INFO(V_INDEX).SUPPLIER_ID;
COMMIT;
CONTINUE;
END IF;
END;

BEGIN
SELECT COUNT(ITEM_ID) INTO V_COUNT_ITEM FROM XX_ITEM_DETAILS_04 
WHERE UPPER(ITEM_NAME)=UPPER(COL_SUPPLIERS_INFO(V_INDEX).ITEM_NAME);
IF V_COUNT_ITEM<=0 THEN
UPDATE XX_SUPPLIER_TEMP_P2_G04 SET VERIFY_FLAG ='N',ERROR_MESSAGE='INVALID ITEM' 
WHERE SUPPLIER_ID = COL_SUPPLIERS_INFO(V_INDEX).SUPPLIER_ID;
COMMIT;
CONTINUE;
END IF;
END;
------------VALIDATION OF QNTY_AVAILABLE---------------------------
BEGIN
IF COL_SUPPLIERS_INFO(V_INDEX).QNTY_AVAILABLE IS NULL THEN
UPDATE XX_SUPPLIER_TEMP_P2_G04 SET VERIFY_FLAG ='N',ERROR_MESSAGE='AVAILABLE QUANTITY CANNOT BE NULL' 
WHERE SUPPLIER_ID = COL_SUPPLIERS_INFO(V_INDEX).SUPPLIER_ID;
COMMIT;
CONTINUE;
END IF;
END;

BEGIN
IF COL_SUPPLIERS_INFO(V_INDEX).QNTY_AVAILABLE <=0 THEN
UPDATE XX_SUPPLIER_TEMP_P2_G04 SET VERIFY_FLAG ='N',ERROR_MESSAGE='QUANTITY OUT OF STOCK' 
WHERE SUPPLIER_ID = COL_SUPPLIERS_INFO(V_INDEX).SUPPLIER_ID;
COMMIT;
CONTINUE;
END IF;
END;
------------VALIDATION OF UNIT PRICE--------------------------------
BEGIN
IF COL_SUPPLIERS_INFO(V_INDEX).UNIT_PRICE IS NULL THEN
UPDATE XX_SUPPLIER_TEMP_P2_G04 SET VERIFY_FLAG ='N',ERROR_MESSAGE='UNIT PRICE CANNOT BE NULL' 
WHERE SUPPLIER_ID = COL_SUPPLIERS_INFO(V_INDEX).SUPPLIER_ID;
COMMIT;
CONTINUE;
END IF;
END;

BEGIN
IF COL_SUPPLIERS_INFO(V_INDEX).UNIT_PRICE < 0 THEN
UPDATE XX_SUPPLIER_TEMP_P2_G04 SET VERIFY_FLAG ='N',ERROR_MESSAGE='UNIT PRICE CANNOT BE NEGATIVE' 
WHERE SUPPLIER_ID = COL_SUPPLIERS_INFO(V_INDEX).SUPPLIER_ID;
COMMIT;
CONTINUE;
END IF;
END;

------------VALIDATION OF SHIP_TO_LOCATION_ID-----------------------
BEGIN
SELECT COUNT(SHIP_TO_LOCATION_ID) INTO V_COUNT_SHIP_LOC_ID FROM HR_LOCATIONS WHERE
SHIP_TO_LOCATION_ID = COL_SUPPLIERS_INFO(V_INDEX).SHIP_TO_LOCATION_ID;
IF V_COUNT_SHIP_LOC_ID <=0 THEN
UPDATE XX_SUPPLIER_TEMP_P2_G04 SET VERIFY_FLAG ='N',ERROR_MESSAGE='INVALID SHIP TO LOCATION' 
WHERE SUPPLIER_ID = COL_SUPPLIERS_INFO(V_INDEX).SUPPLIER_ID;
COMMIT;
CONTINUE;
END IF;
END;
------------------VALIDATION OF BILL_TO_LOCATION_ID---------------
BEGIN
SELECT COUNT(LOCATION_ID) INTO V_COUNT_BILL_LOC_ID FROM HR_LOCATIONS WHERE
LOCATION_ID = COL_SUPPLIERS_INFO(V_INDEX).BILL_TO_LOCATION_ID;
IF V_COUNT_BILL_LOC_ID <=0 THEN
UPDATE XX_SUPPLIER_TEMP_P2_G04 SET VERIFY_FLAG ='N',ERROR_MESSAGE='INVALID BILL TO LOCATION' 
WHERE SUPPLIER_ID = COL_SUPPLIERS_INFO(V_INDEX).SUPPLIER_ID;
COMMIT;
CONTINUE;
END IF;
END;
--------------VALIDATION FOR INVOICE_CURRENCY_CODE AND PAYMENT_CURRENCY_CODE ---------------------
BEGIN
SELECT COUNT(CURRENCY_CODE) INTO V_COUNT_INVOICE_CODE
FROM FND_CURRENCIES WHERE UPPER(CURRENCY_CODE)=UPPER(COL_SUPPLIERS_INFO(V_INDEX).INVOICE_CURRENCY_CODE);
SELECT COUNT(CURRENCY_CODE) INTO V_COUNT_PAYMENT_CODE FROM FND_CURRENCIES
WHERE UPPER(CURRENCY_CODE)=UPPER(COL_SUPPLIERS_INFO(V_INDEX).PAYMENT_CURRENCY_CODE);
IF (COL_SUPPLIERS_INFO(V_INDEX).PAYMENT_CURRENCY_CODE IS NOT NULL OR COL_SUPPLIERS_INFO(V_INDEX).INVOICE_CURRENCY_CODE
IS NOT NULL) AND (V_COUNT_INVOICE_CODE <=0 OR V_COUNT_PAYMENT_CODE<=0) THEN
UPDATE XX_SUPPLIER_TEMP_P2_G04 SET VERIFY_FLAG ='N',ERROR_MESSAGE='INVALID PAYMENT/INVOICE CURRENCY CODE' 
WHERE SUPPLIER_ID = COL_SUPPLIERS_INFO(V_INDEX).SUPPLIER_ID;
COMMIT;
CONTINUE;
END IF;
END;

--------------VALIDATION OF START_DATE_ACTIVE------------------------
BEGIN
IF COL_SUPPLIERS_INFO(V_INDEX).START_DATE_ACTIVE > SYSDATE THEN
UPDATE XX_SUPPLIER_TEMP_P2_G04 SET VERIFY_FLAG ='N',ERROR_MESSAGE='INVALID START DATE' 
WHERE SUPPLIER_ID = COL_SUPPLIERS_INFO(V_INDEX).SUPPLIER_ID;
COMMIT;
CONTINUE;
END IF;
END;
-----------VALIDATION OF CITY---------------------------------
BEGIN
SELECT COUNT(CITY) INTO V_COUNT_CITY FROM XX_LOCATIONS
WHERE UPPER(CITY) = UPPER(COL_SUPPLIERS_INFO(V_INDEX).CITY);
IF V_COUNT_CITY <=0 THEN
UPDATE XX_SUPPLIER_TEMP_P2_G04 SET VERIFY_FLAG ='N',ERROR_MESSAGE='INVALID CITY' 
WHERE SUPPLIER_ID = COL_SUPPLIERS_INFO(V_INDEX).SUPPLIER_ID;
COMMIT;
CONTINUE;
END IF;
END;
-----------VALIDATION OF COUNTRY------------------------------
BEGIN
SELECT COUNT(COUNTRY_ID) INTO V_COUNT_COUNTRY FROM XX_COUNTRIES
WHERE UPPER(COUNTRY_ID) = UPPER(COL_SUPPLIERS_INFO(V_INDEX).COUNTRY);
IF V_COUNT_COUNTRY <=0 THEN
UPDATE XX_SUPPLIER_TEMP_P2_G04 SET VERIFY_FLAG ='N',ERROR_MESSAGE='INVALID COUNTRY' 
WHERE SUPPLIER_ID = COL_SUPPLIERS_INFO(V_INDEX).SUPPLIER_ID;
COMMIT;
CONTINUE;
END IF;
END;
----------INSERTING INTO INTERFACE TABLE-----------------------
----DROP SEQUENCE SEQ_VENDOR_INT_ID_G04;
---create sequence SEQ_VENDOR_INT_ID_G04 START WITH 767103;-----
DECLARE
V_CREATED_BY VARCHAR2(100) := FND_PROFILE.VALUE('USER_ID');
V_LAST_UPDATE_LOGIN VARCHAR2(100) := FND_PROFILE.VALUE('LOGIN_ID');
V_LAST_UPDATED_BY VARCHAR2(100):= FND_PROFILE.VALUE('USER_ID');
BEGIN
IF COL_SUPPLIERS_INFO(V_INDEX).ERROR_MESSAGE IS NULL THEN
UPDATE XX_SUPPLIER_TEMP_P2_G04 SET VERIFY_FLAG='Y',ERROR_MESSAGE='DATA LOADED SUCCESSFULLY',
RECORD_STATUS='SUCCESS' WHERE SUPPLIER_ID = COL_SUPPLIERS_INFO(V_INDEX).SUPPLIER_ID;
INSERT INTO XX_SUPPLIERS_INT_P2_G04(SUPPLIER_ID,SUPPLIER_NAME,CATEGORY_NAME,ITEM_NAME,QNTY_AVAILABLE,UNIT_PRICE,
CREATED_BY,CREATION_DATE,LAST_UPDATE_DATE,LAST_UPDATE_LOGIN,LAST_UPDATED_BY,SHIP_TO_LOCATION_ID,
BILL_TO_LOCATION_ID,INVOICE_CURRENCY_CODE,PAYMENT_CURRENCY_CODE,START_DATE_ACTIVE,CITY,COUNTRY)
VALUES(COL_SUPPLIERS_INFO(V_INDEX).SUPPLIER_ID,COL_SUPPLIERS_INFO(V_INDEX).SUPPLIER_NAME,
COL_SUPPLIERS_INFO(V_INDEX).CATEGORY_NAME,COL_SUPPLIERS_INFO(V_INDEX).ITEM_NAME,
COL_SUPPLIERS_INFO(V_INDEX).QNTY_AVAILABLE,COL_SUPPLIERS_INFO(V_INDEX).UNIT_PRICE,V_CREATED_BY,
SYSDATE,SYSDATE,V_LAST_UPDATE_LOGIN,V_LAST_UPDATED_BY,
COL_SUPPLIERS_INFO(V_INDEX).SHIP_TO_LOCATION_ID,
COL_SUPPLIERS_INFO(V_INDEX).BILL_TO_LOCATION_ID,
COL_SUPPLIERS_INFO(V_INDEX).INVOICE_CURRENCY_CODE,
COL_SUPPLIERS_INFO(V_INDEX).PAYMENT_CURRENCY_CODE,
COL_SUPPLIERS_INFO(V_INDEX).START_DATE_ACTIVE,
COL_SUPPLIERS_INFO(V_INDEX).CITY,
COL_SUPPLIERS_INFO(V_INDEX).COUNTRY
);
COMMIT;
END IF;
END;
END LOOP;
EXCEPTION
WHEN OTHERS THEN
FND_FILE.PUT_LINE(FND_FILE.LOG,'SOMETHING WENT WRONG');
END;

